<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on 琴弦第七</title><link>https://www.qinxiandiqi.sbs/categories/android/</link><description>Recent content in Android on 琴弦第七</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2012-2023 Jianan. All Rights Reserved.</copyright><lastBuildDate>Thu, 05 Jan 2023 22:43:22 +0800</lastBuildDate><atom:link href="https://www.qinxiandiqi.sbs/categories/android/index.xml" rel="self" type="application/rss+xml"/><item><title>使用adb复制文本到设备上</title><link>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8adb%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC%E5%88%B0%E8%AE%BE%E5%A4%87%E4%B8%8A/</link><pubDate>Thu, 05 Jan 2023 22:43:22 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8adb%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC%E5%88%B0%E8%AE%BE%E5%A4%87%E4%B8%8A/</guid><description>使用adb复制文本到设备上</description></item><item><title>查询apk的签名指纹</title><link>https://www.qinxiandiqi.sbs/posts/android/%E6%9F%A5%E8%AF%A2apk%E7%9A%84%E7%AD%BE%E5%90%8D%E6%8C%87%E7%BA%B9/</link><pubDate>Fri, 04 Nov 2022 23:14:16 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E6%9F%A5%E8%AF%A2apk%E7%9A%84%E7%AD%BE%E5%90%8D%E6%8C%87%E7%BA%B9/</guid><description>查看apk签名指纹的两种方式</description></item><item><title>Android的进程优先级</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7/</link><pubDate>Thu, 23 Jun 2016 16:35:24 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7/</guid><description>android对于所有进程的处理态度都是尽可能不杀死。然而，资源总共就那么多，要是对所有进程都保持宽容的话，资源总会有消耗殆尽的时候。因此，在内存不足的情况，android系统需要根据一定的策略，选择性的杀死部分进程。这个策略就是对所有的进程标记优先级，优先级低的先杀死。
android将进程的优先级分为5个层次。</description></item><item><title>android的属性动画</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%B1%9E%E6%80%A7%E5%8A%A8%E7%94%BB/</link><pubDate>Mon, 20 Jun 2016 12:48:17 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%B1%9E%E6%80%A7%E5%8A%A8%E7%94%BB/</guid><description>属性动画（Property Animation）系统是一个更加强大的框架，它几乎允许你为任何东西设置动画。不管一个对象是否需要绘制到屏幕上面，你都可以定义一个动画让这个对象的属性随着时间推移而改变。一个属性动画可以在规定的时间内改变一个属性值（对象的一个成员变量）。设定动画，你需要指定对象中需要设定动画的属性，例如对象在屏幕上的坐标，动画需要执行的时间，以及动画过程中属性的变化值。</description></item><item><title>Android的定位策略</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%AE%9A%E4%BD%8D%E7%AD%96%E7%95%A5/</link><pubDate>Fri, 17 Jun 2016 18:15:48 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%AE%9A%E4%BD%8D%E7%AD%96%E7%95%A5/</guid><description>获取用户的地理位置信息能够让你的应用程序显得更加智能，借此能够分发更合适的信息给用户。为android开发地理位置相关的应用程序，你可以利用GPS或者android的网络定位数据源来获取用户的地理位置。尽管GPS的定位更加精准，但它只适用于户外，并且还会更快的消耗电量，它也不能按用户所期待的及时返回地理位置信息。android的网络定位数据源是通过使用手机信号塔和WiFi信号来获取用户的地理位置信息，不管是在室内还是</description></item><item><title>android权限的最佳运用</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E6%9D%83%E9%99%90%E7%9A%84%E6%9C%80%E4%BD%B3%E8%BF%90%E7%94%A8/</link><pubDate>Thu, 16 Jun 2016 13:22:56 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E6%9D%83%E9%99%90%E7%9A%84%E6%9C%80%E4%BD%B3%E8%BF%90%E7%94%A8/</guid><description>app的权限请求很容易让用户反感。当用户觉得一个app用起来很麻烦，或者觉得这个app不知道要拿用户的信息去做什么事情时，用户可能会避免使用甚至是完全卸载掉这个app。下面的权限最佳运用方式能够帮助你避免这些糟糕的用户体验。</description></item><item><title>app在android 6.0或以上平台版本运行过程中请求权限</title><link>https://www.qinxiandiqi.sbs/posts/android/app%E5%9C%A8android6.0%E6%88%96%E4%BB%A5%E4%B8%8A%E5%B9%B3%E5%8F%B0%E7%89%88%E6%9C%AC%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%B8%AD%E8%AF%B7%E6%B1%82%E6%9D%83%E9%99%90/</link><pubDate>Wed, 04 May 2016 14:03:56 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/app%E5%9C%A8android6.0%E6%88%96%E4%BB%A5%E4%B8%8A%E5%B9%B3%E5%8F%B0%E7%89%88%E6%9C%AC%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B%E4%B8%AD%E8%AF%B7%E6%B1%82%E6%9D%83%E9%99%90/</guid><description>从android 6.0（API 23）开始，安装app时不需要对app的权限申请进行授权，而是在app运行的时候，用户才需要对app进行授权。这种流程精简了app的安装过程，用户不需要在安装或者升级app的时候进行授权操作。这同样也给了用户更多对app功能的控制能力；例如，用户可以选择给一个照相app访问摄像头的权限，但不给它访问设备地理位置的权限。用户也可以通过app的设置界面，随时撤销对app授予的权限。</description></item><item><title>Android的权限声明</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E6%9D%83%E9%99%90%E5%A3%B0%E6%98%8E/</link><pubDate>Thu, 28 Apr 2016 16:23:56 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E6%9D%83%E9%99%90%E5%A3%B0%E6%98%8E/</guid><description>每一个android app都运行在一个限制访问的沙盒中。如果一个app需要访问它所在沙盒之外的资源和信息，那么这个app就需要声明适当的权限。这个权限声明要求将你的app需要的权限全部列举在App的manifest文件中。 根据权限不同的隐私敏感程度级别，系统可能会自动授予该权限，也有可能需要请求设备用户授权才能获取该权限。例如，如果你的app请求授予打开设备闪光灯的权限，系统将会自动授予这个权限。但是，如果你的a</description></item><item><title>Android的屏幕多样性支持</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%B1%8F%E5%B9%95%E5%A4%9A%E6%A0%B7%E6%80%A7%E6%94%AF%E6%8C%81/</link><pubDate>Tue, 20 Oct 2015 19:09:12 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E7%9A%84%E5%B1%8F%E5%B9%95%E5%A4%9A%E6%A0%B7%E6%80%A7%E6%94%AF%E6%8C%81/</guid><description>运行Android系统设备的屏幕尺寸和密度千变万化。然而对于应用程序来说，Android系统为所有设备提供了一个统一的开发环境，并且由系统处理了大部分应用程序界面与实际屏幕的适配工作。同时，系统也提供了相应的API允许你在特定的屏幕尺寸或屏幕密度上为你的应用程序UI做特定的调整，以便在不同配置的屏幕上优化你的UI。例如，你可能需要在平板和手机上显示不一样的UI效果。 尽管系统能够自动将你的应用程序UI通过缩放或重置</description></item><item><title>捕获TextView超链接</title><link>https://www.qinxiandiqi.sbs/posts/android/%E6%8D%95%E8%8E%B7textview%E8%B6%85%E9%93%BE%E6%8E%A5/</link><pubDate>Sat, 03 Oct 2015 22:18:17 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E6%8D%95%E8%8E%B7textview%E8%B6%85%E9%93%BE%E6%8E%A5/</guid><description>Android的TextView是个很强大的控件，通过Html类处理html文本后可以支持部分html标签。有时候需要捕获TextView中&lt;!-- raw HTML omitted -->标签的点击事件进行自己的超链接点击处理，下面的代码用于捕获TextView中&lt;!-- raw HTML omitted -->标签点击后的响应事件： CharSequence charSequence = Html.fromHtml(strHtml); Spannabl</description></item><item><title>解决Android Studio下Element layer-list must be declared问题</title><link>https://www.qinxiandiqi.sbs/posts/android/%E8%A7%A3%E5%86%B3androidstudio%E4%B8%8Belementlayer-listmustbedeclared%E9%97%AE%E9%A2%98/</link><pubDate>Wed, 08 Jul 2015 22:44:29 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E8%A7%A3%E5%86%B3androidstudio%E4%B8%8Belementlayer-listmustbedeclared%E9%97%AE%E9%A2%98/</guid><description>最近将一个项目从Eclipse转到Android Studio。项目中使用了环信demo中的一些xml资源，转换后发现color资源文件夹下诸如layer-list或者shape等标签报Element xxx must be declared错误，大意就是layer-list或者shape这些标签没有定义。 layer-list或者shape等这些标签是常用的标签，Android Studio居</description></item><item><title>Volley的使用（一）</title><link>https://www.qinxiandiqi.sbs/posts/android/volley%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%80/</link><pubDate>Tue, 26 May 2015 16:33:13 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/volley%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%80/</guid><description>Volley是google推荐的Android网络数据访问处理的库，具有简化网络数据访问、多并发、支持缓存、允许取消网络请求、支持自定义复杂网络数据请求等优点。另外，Volley也提供了处理大量网络图片、处理Json数据的工具。不过，Volley也有它的局限性。它不适用于大文件数据的下载，因为Volley在解析网络数据的过程中会将这些数据都放在内存中，处下载大型文件可能会导致内存OOM问题。在开发</description></item><item><title>建立企业内部maven服务器并使用Android Studio发布公共项目</title><link>https://www.qinxiandiqi.sbs/posts/maven/%E5%BB%BA%E7%AB%8B%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8maven%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8androidstudio%E5%8F%91%E5%B8%83%E5%85%AC%E5%85%B1%E9%A1%B9%E7%9B%AE/</link><pubDate>Thu, 19 Mar 2015 18:46:23 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/maven/%E5%BB%BA%E7%AB%8B%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8maven%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B9%B6%E4%BD%BF%E7%94%A8androidstudio%E5%8F%91%E5%B8%83%E5%85%AC%E5%85%B1%E9%A1%B9%E7%9B%AE/</guid><description>由于Android Studio使用了Gradle构建工具，在library依赖的处理上是将被依赖的library作为一个module引入（拥有一份完整的library拷贝），而Eclipse的ADT则是直接将library作为外部项目依赖链接进来，两者各有各的优缺点。Android Studio的好处是能时刻保持项目的完整性，每一个项目都包含了整个项目所需要的一切东西，当你把项目共享给别人的时候</description></item><item><title>Android Wi-Fi Peer-to-Peer（Android的Wi-Fi P2P对等网络）</title><link>https://www.qinxiandiqi.sbs/posts/android/androidwi-fipeer-to-peerandroid%E7%9A%84wi-fip2p%E5%AF%B9%E7%AD%89%E7%BD%91%E7%BB%9C/</link><pubDate>Mon, 17 Nov 2014 18:51:14 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/androidwi-fipeer-to-peerandroid%E7%9A%84wi-fip2p%E5%AF%B9%E7%AD%89%E7%BD%91%E7%BB%9C/</guid><description>Wi-Fi peer-to-peer（P2P，对等网络），它允许具备相应硬件的Android 4.0（API level 14）或者更高版本的设备可以直接通过wifi而不需要其它中间中转节点就能直接通信（Android的Wi-Fi P2P框架符合Wi-Fi联盟的Wi-Fi Direct™直连认证标志）。使用这些API，你可以搜索并连接其它同样支持Wi-Fi P2P的设备，然后再通过一个高速的连接进</description></item><item><title>Android应用程序安装位置（App Install Location）</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AEappinstalllocation/</link><pubDate>Thu, 13 Nov 2014 16:11:03 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AEappinstalllocation/</guid><description>从API Level 8（Android 2.2）开始，你可以将你的应用程序安装到外部存储上（例如，设备的SD卡）。你可以在应用程序的manifest文件中声明android:installLocation属性来使用这个可选的功能。如果你没有声明这个属性，你的应用程序只能被安装在内部存储中，并且不能移动到外部存储上。
允许系统将你的应用程序安装到外部存储上，你需要修改你的manifest文件</description></item><item><title>Android Bluetooth Low Energy（Android低功耗蓝牙）</title><link>https://www.qinxiandiqi.sbs/posts/android/androidbluetoothlowenergyandroid%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99/</link><pubDate>Mon, 03 Nov 2014 15:31:51 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/androidbluetoothlowenergyandroid%E4%BD%8E%E5%8A%9F%E8%80%97%E8%93%9D%E7%89%99/</guid><description>Android 4.3（API Level 18）开始引入Bluetooth Low Energy（BLE，低功耗蓝牙）的核心功能并提供了相应的API，应用程序通过这些api可以扫描设备、查询services，读写设备的characteristics（属性特征）。对比传统的蓝牙，BLE的设计能够显著减低功耗。这让Android应用程序与BLE设备之间的低功耗通讯成为可能，例如距离传感器、心率监视器</description></item><item><title>Android蓝牙</title><link>https://www.qinxiandiqi.sbs/posts/android/android%E8%93%9D%E7%89%99/</link><pubDate>Mon, 27 Oct 2014 15:22:10 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/android%E8%93%9D%E7%89%99/</guid><description>&lt;p>Android平台提供了对蓝牙网络协议栈的支持，它允许设备通过无线的方式与其它设备进行数据交换。应用程序框架通过Android Bluetooth APIs提供了对蓝牙功能的访问。这些API允许应用以无线的方式连接其它蓝牙设备，启用点对点或者多点对多点的无线功能。使用蓝牙的API，Android应用程序可以执行以下工作：&lt;/p>
&lt;ul>
&lt;li>扫描其它蓝牙设备 * 查询本地蓝牙适配器以配对蓝牙设备 * 建&lt;/li>
&lt;/ul></description></item><item><title>Google Maps Android API v2说明</title><link>https://www.qinxiandiqi.sbs/posts/android/googlemapsandroidapiv2%E8%AF%B4%E6%98%8E/</link><pubDate>Thu, 12 Jun 2014 14:17:07 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/googlemapsandroidapiv2%E8%AF%B4%E6%98%8E/</guid><description>通过使用Google Maps Android API，你可以添加依赖于Google Maps数据源的地图到你自己的应用上。Google Maps API会自动执行连接Google Maps服务器，下载地图数据，显示地图，并且响应地图手势等过程。你也可以通过API去添加地图标识，多边形以及添加地图上的覆盖层来修改地图界面以展现特殊的地图需求。这些对象提供了指定地点附加信息，并且允许用于与地图进行互动。Google Maps API允许你添加以下图标到地图上：</description></item><item><title>Win8.1下Android SDK Manager等SDK工具闪退问题</title><link>https://www.qinxiandiqi.sbs/posts/android/win8.1%E4%B8%8Bandroidsdkmanager%E7%AD%89sdk%E5%B7%A5%E5%85%B7%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/</link><pubDate>Thu, 12 Jun 2014 09:17:58 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/win8.1%E4%B8%8Bandroidsdkmanager%E7%AD%89sdk%E5%B7%A5%E5%85%B7%E9%97%AA%E9%80%80%E9%97%AE%E9%A2%98/</guid><description>升级到Win8.1之后，发现Android SDK中的工具</description></item><item><title>使用命令行工具管理Android项目（Managing Projects from the Command Line）</title><link>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E7%AE%A1%E7%90%86android%E9%A1%B9%E7%9B%AEmanagingprojectsfromthecommandline/</link><pubDate>Wed, 11 Jun 2014 18:34:30 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7%E7%AE%A1%E7%90%86android%E9%A1%B9%E7%9B%AEmanagingprojectsfromthecommandline/</guid><description>前言
Android Tool支持通过命令行创建三种类型的项目。一个Android项目包括了打包成.apk安装文件锁需要的一切文件和资源。 一个Android项目包括了打包成.apk安装文件所需要的一切文件和资源。你需要为你最终安装到设备上的应用创建一个Android项目</description></item><item><title>使用Eclipse和ADT插件管理Android项目（Managing Project from Eclipse with ADT）</title><link>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8eclipse%E5%92%8Cadt%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86android%E9%A1%B9%E7%9B%AEmanagingprojectfromeclipsewithadt/</link><pubDate>Wed, 11 Jun 2014 10:31:36 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E4%BD%BF%E7%94%A8eclipse%E5%92%8Cadt%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86android%E9%A1%B9%E7%9B%AEmanagingprojectfromeclipsewithadt/</guid><description>简介
使用Eclipse和ADT插件可以提供可视化界面和向导来创建三种类型的项目（Android项目，库项目，以及测试项目）： *一个Android项目包含了将项目打包成.apk安装文件所需要的所有文件和资源。你需要为你最终需要安装到设备上的应用创建一个Android项目。 *你也可以设计一个Android项目作为库项目，它可以共享给其它需要依赖于它的项目。一旦一个Android项目被设</description></item><item><title>设置Google Play Services SDK(Set Up Google Play Services SDK)</title><link>https://www.qinxiandiqi.sbs/posts/android/%E8%AE%BE%E7%BD%AEgoogleplayservicessdksetupgoogleplayservicessdk/</link><pubDate>Mon, 09 Jun 2014 18:35:28 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E8%AE%BE%E7%BD%AEgoogleplayservicessdksetupgoogleplayservicessdk/</guid><description>开发一个使用Google Play services API的应用，你需要为你的项目配置Google Play services SDK。如果还没有你还没有安装Google Play services SDK，现在你可以按照Android SDK Packages指南来获取。</description></item><item><title>设置Google Play Services SDK(Set Up Google Play Services SDK)</title><link>https://www.qinxiandiqi.sbs/posts/android/%E8%AE%BE%E7%BD%AEgoogleplayservicessdk/</link><pubDate>Mon, 09 Jun 2014 18:35:28 +0800</pubDate><guid>https://www.qinxiandiqi.sbs/posts/android/%E8%AE%BE%E7%BD%AEgoogleplayservicessdk/</guid><description>Google Play Services SDK的初始化。</description></item></channel></rss>